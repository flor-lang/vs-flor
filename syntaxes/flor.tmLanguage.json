{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Flor",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#keywords" },
		{ "include": "#operators" },
		{ "include": "#storages" },
		{ "include": "#strings" },
		{ "include": "#numbers" },
		{ "include": "#boolean" },
		{ "include": "#null" },
		{ "include": "#identifiers" }
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control",
				"match": "\\b(faca|entao|fim|se|senao|enquanto|para|cada|retornar|definir|funcao)\\b"
			}]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.comparison",
					"match": "\\b(e|ou|a|igual|diferente|para|cada|de|ate|com|passo)\\b"
				},
				{
					"name": "keyword.operator.comparison",
					"match": "[\\/=\\-+!*%<>:]"
				},
				{
					"name": "keyword.control",
					"match": "\\b(nova|novo)\\b"
				}
			]
		},
		"storages": {
			"patterns": [
				{
					"name": "storage.modifier",
					"match": "\\b(privado|publico|estatico)\\b"
				},
				{
					"name": "storage.type.swift",
					"match": "\\b(classe|interface)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape",
				"match": "\\\\."
			}]
		},
		"numbers": {
			"name": "constant.numeric",
			"match": "\\b[0-9]+(\\.[0-9]+)?\\b"
		},
		"boolean": {
			"name": "constant.language",
			"match": "\\b(verdadeiro|falso)\\b"
		},
		"null": {
			"name": "constant.language",
			"match": "\\b(nulo)\\b"
		},
		"identifiers": {
			"patterns": [
				{
					"name": "variable.language.flor",
					"match": "(\\b(super)\\b)|#[_]*([a-zA-Z_][a-zA-Z0-9]+|[a-zA-Z])+"
				},
				{
					"name": "entity.name.function",
					"match": "([_]*[a-zA-Z][a-zA-Z0-9_]*)(?=[(])"
				},
				{
					"name": "entity.name.class",
					"match": "((?<=classe\\s)|(?<=interface\\s))([_]*[a-zA-Z][a-zA-Z0-9_]*)"
				},
				{
					"name":  "variable.other",
					"match": "([_]*[a-zA-Z][a-zA-Z0-9_]*)(?=[:])"
				}
			]
		},
		"comments": {
			"patterns": [
				{ "match": "(//).*",
					"name": "comment.line.double-slash"
				},
				{ "begin": "/\\*",
					"end": "\\*/",
					"name": "comment.block"
				}
			]
		}
	},
	"scopeName": "source.flor"
}